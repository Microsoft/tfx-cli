# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# This pipeline will be extended to the OneESPT template

trigger:
- master
- releases/*
#variables:
#- group: npm-tokens
resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    settings:
      skipBuildTagsForGitHubPullRequests: true
    # featureFlags:
      # autoBaseline: false
    # sdl:
    #   baseline:
    #     baselineSet: default
    #     baselineFile: $(Build.SourcesDirectory)/.gdn/.gdnbaselines
    sdl:
      sourceAnalysisPool:
        name: Azure-Pipelines-1ESPT-ExDShared
        image: windows-2022
        os: windows
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-2022
      os: windows
    stages:
    - stage: stage
      jobs:
      - job: job
        templateContext:
          outputs:
          - ${{ if in(variables['build.reason'], 'IndividualCI', 'BatchedCI', 'Manual') }}:
            - output: pipelineArtifact
              displayName: 'Publish tfx-cli package to pipeline artifacts'
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifactType: 'pipeline'
              artifactName: 'tfx-cli-package'
        steps:
        - checkout: self
          clean: true

        - task: NodeTool@0
          displayName: Use node 20
          inputs:
            versionSpec: "20.x"

        - script: npm i -g npm@10.2.4 --force
          displayName: Use npm version 10.2.4

        - script: npm i -g typescript@5.1.3 --force
          displayName: Use typescript (tsc) version 5.1.3
        
        - task: Npm@1
          displayName: install TFX CLI dependencies
          inputs:
            command: ci
        
        - bash: |
            npm run build
          displayName: Build TFX CLI

        - task: Npm@1
          displayName: Publish tfx-cli to kusto npm
          condition: and(succeeded(), in(variables['build.reason'], 'IndividualCI', 'BatchedCI', 'Manual'), eq(variables['build.sourcebranchname'], 'master'))
          inputs:
            command: publish
            workingDir: './'
            publishRegistry: useFeed
            publishFeed: tfs-cli
          continueOnError: true
        
        - bash: |
            npm pack
            cp *.tgz '$(Build.ArtifactStagingDirectory)'
          displayName: Run npm-pack and copy to ArtifactStagingDirectory

        # Install node 16 for CodeQL 3000
        - task: NodeTool@0
          displayName: Use node 16
          inputs:
            versionSpec: "16.x"
